name: Terraform Security Audit

on:
  pull_request:
    paths:
      - '**.tf'
  push:
    branches:
      - main
    paths:
      - '**.tf'
  workflow_dispatch:
    inputs:
      filepath:
        description: 'Path to the Terraform file to audit'
        required: true
        default: 'test'

permissions:
  pull-requests: write

jobs:
  iac-security-audit:
    runs-on: ubuntu-latest
    outputs:
      audit-results: ${{ steps.audit_step.outputs.audit_results }}
      audit-outcome: ${{ steps.audit_step.outcome }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run AI Security Auditor
        id: audit_step
        run: |
          FILEPATH="${{ github.event_name == 'workflow_dispatch' && github.event.inputs.filepath || 'test' }}"
          
          echo "üîç Running security audit on: $FILEPATH"
          
          # Capture the output
          if python3 main.py "$FILEPATH" > audit_output.txt 2>&1; then
            AUDIT_RESULT="success"
          else
            AUDIT_RESULT="failed"
          fi
          
          # Set outputs for the next job
          AUDIT_OUTPUT=$(cat audit_output.txt)
          echo "audit_results<<EOF" >> $GITHUB_OUTPUT
          echo "$AUDIT_OUTPUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "audit_outcome=$AUDIT_RESULT" >> $GITHUB_OUTPUT
          
          # --- ADD JOB SUMMARY ---
          echo "## ü§ñ AI Security Audit Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "$AUDIT_RESULT" = "failed" ]; then
            echo "### ‚ùå Status: FAILED" >> $GITHUB_STEP_SUMMARY
            echo "Vulnerabilities were detected. See the logs and the PR comment for details." >> $GITHUB_STEP_SUMMARY
          else
            echo "### ‚úÖ Status: PASSED" >> $GITHUB_STEP_SUMMARY
            echo "No security vulnerabilities were detected." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Path Analyzed:** \`$FILEPATH\`" >> $GITHUB_STEP_SUMMARY
          
          # Display the full logs in the step output
          cat audit_output.txt
          
          # Exit with appropriate code
          if [ "$AUDIT_RESULT" = "failed" ]; then
            exit 1
          fi
        env:
          HUGGING_FACE_HUB_TOKEN: ${{ secrets.HUGGING_FACE_HUB_TOKEN }}

  add-pr-comment:
    needs: iac-security-audit
    runs-on: ubuntu-latest
    if: always() && github.event_name == 'pull_request'
    steps:
      - name: Post Audit Results as a PR Comment
        uses: actions/github-script@v7
        env:
          AUDIT_OUTCOME: ${{ needs.iac-security-audit.outputs.audit-outcome }}
          AUDIT_RESULTS: ${{ needs.iac-security-audit.outputs.audit-results }}
        with:
          script: |
            // This JavaScript block remains the same
            const auditOutcome = process.env.AUDIT_OUTCOME;
            const auditResults = process.env.AUDIT_RESULTS;
            
            let commentBody = `## ü§ñ AI Security Audit Results\n\n`;
            
            if (auditOutcome === 'success') {
              commentBody += `‚úÖ **PASSED** - No security vulnerabilities were detected!`;
            } else {
              commentBody += `‚ùå **FAILED** - Vulnerabilities were detected!\n\n`;
              commentBody += `<details><summary>Click to view full audit logs</summary>\n\n\`\`\`\n${auditResults}\n\`\`\`\n\n</details>`;
            }
            
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });
